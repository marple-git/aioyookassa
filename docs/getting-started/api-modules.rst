API –º–æ–¥—É–ª–∏
===========

–û–±–∑–æ—Ä –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö API –º–æ–¥—É–ª–µ–π –≤ aioyookassa.

–î–æ—Å—Ç—É–ø –∫ –º–æ–¥—É–ª—è–º
----------------

–í—Å–µ API –º–æ–¥—É–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω—ã–π –∫–ª–∏–µ–Ω—Ç:

.. code-block:: python

    from aioyookassa import YooKassa

    client = YooKassa(api_key="your_key", shop_id=12345)

    # –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥—É–ª–∏
    payments = client.payments          # –ü–ª–∞—Ç–µ–∂–∏
    refunds = client.refunds            # –í–æ–∑–≤—Ä–∞—Ç—ã
    receipts = client.receipts          # –ß–µ–∫–∏
    invoices = client.invoices          # –°—á–µ—Ç–∞
    payment_methods = client.payment_methods  # –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã

üí≥ Payments API
---------------

–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–ª–∞—Ç–µ–∂–∞–º–∏.

–û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã
~~~~~~~~~~~~~~~

.. code-block:: python

    from aioyookassa.types.enum import ConfirmationType, Currency
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
    payment = await client.payments.create_payment(
        amount=PaymentAmount(value=100.00, currency=Currency.RUB),
        confirmation=Confirmation(type=ConfirmationType.REDIRECT, return_url="https://example.com"),
        description="–¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂"
    )

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π
    payments = await client.payments.get_payments(
        created_at=datetime(2023, 1, 1),
        status=PaymentStatus.SUCCEEDED,
        limit=10
    )

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
    payment = await client.payments.get_payment("payment_id")

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
    payment = await client.payments.capture_payment("payment_id")

    # –û—Ç–º–µ–Ω–∞ –ø–ª–∞—Ç–µ–∂–∞
    payment = await client.payments.cancel_payment("payment_id")

–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
~~~~~~~~~~~~~~~~~~~~~

–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ —Å –ø–æ–ª–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
'''''''''''''''''''''''''''''''''''''''

.. code-block:: python

    from aioyookassa.types.payment import (
        PaymentAmount, Confirmation, PaymentMethod, CardInfo,
        Recipient, Customer, Receipt, PaymentItem
    )
    from aioyookassa.types.enum import (
        ConfirmationType, Currency, PaymentMethodType,
        PaymentSubject, PaymentMode
    )

    async def create_full_payment():
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
        card_info = CardInfo(
            first_six="123456",
            last_four="7890",
            expiry_month="12",
            expiry_year="2025",
            card_type="Visa"
        )
        
        payment_method = PaymentMethod(
            type=PaymentMethodType.CARD,
            id="pm_123456",
            saved=False,
            card=card_info
        )
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        confirmation = Confirmation(
            type=ConfirmationType.REDIRECT,
            return_url="https://example.com/success"
        )
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        recipient = Recipient(
            account_id="123456789",
            gateway_id="123456"
        )
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞
        customer = Customer(
            full_name="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤",
            email="ivan@example.com",
            phone="+79001234567"
        )
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–µ–∫–∞
        receipt = Receipt(
            customer=customer,
            items=[
                PaymentItem(
                    description="–¢–æ–≤–∞—Ä",
                    quantity=1,
                    amount=PaymentAmount(value=100.00, currency=Currency.RUB),
                    vat_code=1,
                    payment_subject=PaymentSubject.COMMODITY,
                    payment_mode=PaymentMode.FULL_PAYMENT
                )
            ],
            tax_system_code=1
        )
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
        payment = await client.payments.create_payment(
            amount=PaymentAmount(value=100.00, currency=Currency.RUB),
            description="–û–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞ #12345",
            payment_method=payment_method,
            confirmation=confirmation,
            recipient=recipient,
            receipt=receipt,
            metadata={"order_id": "12345", "user_id": "67890"}
        )
        
        return payment

üí∞ Refunds API
--------------

–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–æ–∑–≤—Ä–∞—Ç–∞–º–∏.

–û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã
~~~~~~~~~~~~~~~

.. code-block:: python

    from aioyookassa.types.enum import Currency
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—Ç–∞
    refund = await client.refunds.create_refund(
        payment_id="payment_id",
        amount=PaymentAmount(value=50.00, currency=Currency.RUB),
        description="–ß–∞—Å—Ç–∏—á–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç"
    )

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–æ–∑–≤—Ä–∞—Ç–µ
    refund = await client.refunds.get_refund("refund_id")

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤
    refunds = await client.refunds.get_refunds(
        payment_id="payment_id",
        limit=10
    )

–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
~~~~~~~~~~~~~~~~~~~~~

–°–æ–∑–¥–∞–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å –¥–µ—Ç–∞–ª—è–º–∏
'''''''''''''''''''''''''''''

.. code-block:: python

    from aioyookassa.types.refund import RefundMethod, RefundArticle
    from aioyookassa.types.enum import Currency

    async def create_detailed_refund():
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ø–æ—Å–æ–±–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
        refund_method = RefundMethod(
            type="bank_card",
            account_id="123456789"
        )
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∞—Ç–µ–π –≤–æ–∑–≤—Ä–∞—Ç–∞
        articles = [
            RefundArticle(
                description="–í–æ–∑–≤—Ä–∞—Ç —Ç–æ–≤–∞—Ä–∞",
                quantity=1,
                amount=PaymentAmount(value=50.00, currency=Currency.RUB),
                vat_code=1
            )
        ]
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—Ç–∞
        refund = await client.refunds.create_refund(
            payment_id="payment_id",
            amount=PaymentAmount(value=50.00, currency=Currency.RUB),
            description="–í–æ–∑–≤—Ä–∞—Ç –∑–∞ –Ω–µ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä",
            refund_method=refund_method,
            articles=articles
        )
        
        return refund

üßæ Receipts API
---------------

–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∏—Å–∫–∞–ª—å–Ω—ã–º–∏ —á–µ–∫–∞–º–∏.

–û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã
~~~~~~~~~~~~~~~

.. code-block:: python

    from aioyookassa.types.payment import PaymentItem
    from aioyookassa.types.enum import Currency, PaymentSubject, PaymentMode
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —á–µ–∫–∞
    receipt = await client.receipts.create_receipt(
        payment_id="payment_id",
        items=[
            PaymentItem(
                description="–¢–æ–≤–∞—Ä",
                quantity=1,
                amount=PaymentAmount(value=100.00, currency=Currency.RUB),
                vat_code=1,
                payment_subject=PaymentSubject.COMMODITY,
                payment_mode=PaymentMode.FULL_PAYMENT
            )
        ],
        tax_system_code=1
    )

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–µ–∫–µ
    receipt = await client.receipts.get_receipt("receipt_id")

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —á–µ–∫–æ–≤
    receipts = await client.receipts.get_receipts(
        payment_id="payment_id",
        limit=10
    )

–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
~~~~~~~~~~~~~~~~~~~~~

–°–æ–∑–¥–∞–Ω–∏–µ —á–µ–∫–∞ —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
'''''''''''''''''''''''''''''''

.. code-block:: python

    from aioyookassa.types.receipt_registration import (
        ReceiptRegistrationItem, ReceiptSettlement, Supplier
    )
    from aioyookassa.types.enum import Currency

    async def create_detailed_receipt():
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
        supplier = Supplier(
            name="–û–û–û '–ü—Ä–∏–º–µ—Ä'",
            inn="1234567890",
            phone="+79001234567"
        )
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–∑–∏—Ü–∏–π —á–µ–∫–∞
        items = [
            ReceiptRegistrationItem(
                description="–¢–æ–≤–∞—Ä 1",
                quantity=2,
                amount=PaymentAmount(value=100.00, currency=Currency.RUB),
                vat_code=1,
                payment_subject="commodity",
                payment_mode="full_payment",
                supplier=supplier
            ),
            ReceiptRegistrationItem(
                description="–¢–æ–≤–∞—Ä 2",
                quantity=1,
                amount=PaymentAmount(value=200.00, currency=Currency.RUB),
                vat_code=1,
                payment_subject="commodity",
                payment_mode="full_payment",
                supplier=supplier
            )
        ]
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å—á–µ—Ç–æ–≤
        settlements = [
            ReceiptSettlement(
                type="prepayment",
                amount=PaymentAmount(value=400.00, currency=Currency.RUB)
            )
        ]
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —á–µ–∫–∞
        receipt = await client.receipts.create_receipt(
            payment_id="payment_id",
            items=items,
            tax_system_code=1,
            settlements=settlements
        )
        
        return receipt

üìÑ Invoices API
---------------

–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—á–µ—Ç–∞–º–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É.

–û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã
~~~~~~~~~~~~~~~

.. code-block:: python

    from aioyookassa.types.enum import Currency
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç–∞
    invoice = await client.invoices.create_invoice(
        amount=PaymentAmount(value=1000.00, currency=Currency.RUB),
        description="–°—á–µ—Ç –Ω–∞ –æ–ø–ª–∞—Ç—É"
    )

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å—á–µ—Ç–µ
    invoice = await client.invoices.get_invoice("invoice_id")

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—á–µ—Ç–æ–≤
    invoices = await client.invoices.get_invoices(limit=10)

–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
~~~~~~~~~~~~~~~~~~~~~

–°–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç–∞ —Å –¥–µ—Ç–∞–ª—è–º–∏
'''''''''''''''''''''''''

.. code-block:: python

    from aioyookassa.types.invoice import (
        InvoicePaymentData, InvoiceReceipt, InvoiceCartItem
    )
    from aioyookassa.types.payment import PaymentItem
    from aioyookassa.types.enum import Currency, PaymentSubject, PaymentMode

    async def create_detailed_invoice():
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
        cart_items = [
            InvoiceCartItem(
                description="–£—Å–ª—É–≥–∞ 1",
                quantity=1,
                amount=PaymentAmount(value=500.00, currency=Currency.RUB),
                vat_code=1
            ),
            InvoiceCartItem(
                description="–£—Å–ª—É–≥–∞ 2",
                quantity=2,
                amount=PaymentAmount(value=250.00, currency=Currency.RUB),
                vat_code=1
            )
        ]
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–µ–∫–∞
        receipt = InvoiceReceipt(
            items=[
                PaymentItem(
                    description="–£—Å–ª—É–≥–∞ 1",
                    quantity=1,
                    amount=PaymentAmount(value=500.00, currency=Currency.RUB),
                    vat_code=1,
                    payment_subject=PaymentSubject.SERVICE,
                    payment_mode=PaymentMode.FULL_PAYMENT
                ),
                PaymentItem(
                    description="–£—Å–ª—É–≥–∞ 2",
                    quantity=2,
                    amount=PaymentAmount(value=250.00, currency=Currency.RUB),
                    vat_code=1,
                    payment_subject=PaymentSubject.SERVICE,
                    payment_mode=PaymentMode.FULL_PAYMENT
                )
            ],
            tax_system_code=1
        )
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–∞
        payment_data = InvoicePaymentData(
            type="bank_card",
            account_id="123456789"
        )
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å—á–µ—Ç–∞
        invoice = await client.invoices.create_invoice(
            amount=PaymentAmount(value=1000.00, currency=Currency.RUB),
            description="–°—á–µ—Ç –Ω–∞ –æ–ø–ª–∞—Ç—É —É—Å–ª—É–≥",
            cart=cart_items,
            receipt=receipt,
            payment_method=payment_data
        )
        
        return invoice

üí≥ Payment Methods API
---------------------

–ú–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø–æ—Å–æ–±–∞–º–∏ –æ–ø–ª–∞—Ç—ã.

–û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã
~~~~~~~~~~~~~~~

.. code-block:: python

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã
    methods = await client.payment_methods.get_payment_methods()

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
    method = await client.payment_methods.get_payment_method("method_id")

–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
~~~~~~~~~~~~~~~~~~~~~

–†–∞–±–æ—Ç–∞ —Å–æ —Å–ø–æ—Å–æ–±–∞–º–∏ –æ–ø–ª–∞—Ç—ã
'''''''''''''''''''''''''''

.. code-block:: python

    async def work_with_payment_methods():
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã
        methods = await client.payment_methods.get_payment_methods()
        
        print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:")
        for method in methods.items:
            print(f"- {method.type}: {method.description}")
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º —Å–ø–æ—Å–æ–±–µ
        if methods.items:
            method_id = methods.items[0].id
            method = await client.payment_methods.get_payment_method(method_id)
            print(f"–î–µ—Ç–∞–ª–∏ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã: {method.type}")

–ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
-----------------------------

–ü—Ä–∏–º–µ—Ä –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: python

    from aioyookassa.types.payment import PaymentItem
    from aioyookassa.types.enum import (
        ConfirmationType, Currency, PaymentSubject, PaymentMode
    )
    
    async def process_complete_payment():
        """–ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–ª–∞—Ç–µ–∂–∞ —Å —á–µ–∫–æ–º –∏ –≤–æ–∑–≤—Ä–∞—Ç–æ–º."""
        
        try:
            # 1. –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
            payment = await client.payments.create_payment(
                amount=PaymentAmount(value=1000.00, currency=Currency.RUB),
                description="–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ø–ª–∞—Ç–µ–∂",
                confirmation=Confirmation(type=ConfirmationType.REDIRECT, return_url="https://example.com")
            )
            
            print(f"‚úÖ –ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω: {payment.id}")
            
            # 2. –û–∂–∏–¥–∞–Ω–∏–µ –æ–ø–ª–∞—Ç—ã (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —á–µ—Ä–µ–∑ webhook)
            await asyncio.sleep(2)
            
            # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
            payment_info = await client.payments.get_payment(payment.id)
            
            if payment_info.status == PaymentStatus.SUCCEEDED:
                # 4. –°–æ–∑–¥–∞–Ω–∏–µ —á–µ–∫–∞
                receipt = await client.receipts.create_receipt(
                    payment_id=payment.id,
                    items=[
                        PaymentItem(
                            description="–¢–æ–≤–∞—Ä",
                            quantity=1,
                            amount=PaymentAmount(value=1000.00, currency=Currency.RUB),
                            vat_code=1,
                            payment_subject=PaymentSubject.COMMODITY,
                            payment_mode=PaymentMode.FULL_PAYMENT
                        )
                    ],
                    tax_system_code=1
                )
                
                print(f"‚úÖ –ß–µ–∫ —Å–æ–∑–¥–∞–Ω: {receipt.id}")
                
                # 5. –°–æ–∑–¥–∞–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
                if should_refund:
                    refund = await client.refunds.create_refund(
                        payment_id=payment.id,
                        amount=PaymentAmount(value=500.00, currency=Currency.RUB),
                        description="–ß–∞—Å—Ç–∏—á–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç"
                    )
                    
                    print(f"‚úÖ –í–æ–∑–≤—Ä–∞—Ç —Å–æ–∑–¥–∞–Ω: {refund.id}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            raise

